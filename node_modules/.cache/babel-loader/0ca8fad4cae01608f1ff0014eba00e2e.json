{"ast":null,"code":"var _jsxFileName = \"/home/albus/saakaar-initial-work/src/pages/Eventregister.js\";\nimport React from \"react\";\nimport '../assets/css/eventform.css';\n\nclass Eventregister extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fname: \"\",\n      lname: \"\",\n      phnumber: \"\",\n      cities: [],\n      age: \"\",\n      kids: \"\",\n      cityId: ''\n    };\n\n    this.validate = () => {\n      if (this.state.phnumber.length !== 10) {\n        alert(\"Phone Number should be 10 digits\");\n      }\n\n      if (!this.state.fname) {\n        alert(\"First Name Cannot be blank\");\n      }\n\n      if (!this.state.lname) {\n        alert(\"Last Name Cannot be blank\");\n      }\n\n      if (!this.state.age) {\n        alert(\"Age Cannot be blank\");\n      }\n\n      if (!this.state.kids) {\n        alert(\"Kids Cannot be blank\");\n      }\n    };\n\n    this.handleChange = (event, fieldName) => {\n      console.log(fieldName);\n      this.setState({\n        [fieldName]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const isValid = this.validate();\n\n      if (isValid) {\n        var data = JSON.stringify({\n          \"first_name\": this.state.fname,\n          \"last_name\": this.state.lname,\n          \"mobile_number\": this.state.phnumber,\n          \"city_id\": this.state.cityId,\n          \"age\": this.state.age,\n          \"kids\": this.state.kids\n        });\n        var xhr = new XMLHttpRequest();\n        xhr.withCredentials = true;\n        xhr.addEventListener(\"readystatechange\", function () {\n          if (this.readyState === 4) {\n            alert(this.responseText);\n          }\n        });\n        xhr.open(\"POST\", \"http://45eadb93.ngrok.io/v0/register\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader(\"Host\", \"45eadb93.ngrok.io\");\n        xhr.send(data);\n        alert(\"Registration Successful\");\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"http://45eadb93.ngrok.io/v0/city\";\n    const response = await fetch(url);\n    const cityData = await response.json();\n    this.setState({\n      cities: cityData\n    });\n    this.setState({\n      cityId: cityData.ID\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"eventForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Hello Desktop\"), React.createElement(\"div\", {\n      className: \"Mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"first_name\",\n      value: this.state.fname,\n      onChange: event => this.handleChange(event, \"fname\"),\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"last_name\",\n      value: this.state.lname,\n      onChange: event => this.handleChange(event, \"lname\"),\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"mobile_number\",\n      value: this.state.phnumber,\n      onChange: event => this.handleChange(event, \"phnumber\"),\n      placeholder: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.cityId,\n      type: \"text\",\n      name: \"city_id\",\n      list: \"cityList\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"cityList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.cities.map(city => React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, city.english, \"  \", city.hindi)))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"age\",\n      value: this.state.age,\n      onChange: event => this.handleChange(event, \"age\"),\n      placeholder: \"Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"kids\",\n      value: this.state.kids,\n      onChange: event => this.handleChange(event, \"kids\"),\n      placeholder: \"Kids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      className: \"submit-button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Eventregister;","map":{"version":3,"sources":["/home/albus/saakaar-initial-work/src/pages/Eventregister.js"],"names":["React","Eventregister","Component","state","fname","lname","phnumber","cities","age","kids","cityId","validate","length","alert","handleChange","event","fieldName","console","log","setState","target","value","handleSubmit","isValid","data","JSON","stringify","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","componentDidMount","url","response","fetch","cityData","json","ID","render","map","city","english","hindi"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../assets/css/eventform.css'\n\nclass Eventregister extends React.Component{\n\n    async componentDidMount() {\n        const url = \"http://45eadb93.ngrok.io/v0/city\"\n        const response = await fetch(url)\n        const cityData = await response.json()\n        this.setState({cities: cityData})\n        this.setState({cityId: cityData.ID})\n    }\n\n    state = {\n        fname: \"\",\n        lname: \"\",\n        phnumber: \"\",\n        cities: [],\n        age: \"\",\n        kids: \"\",\n        cityId: ''\n    }\n\n    validate = () =>{\n        if(this.state.phnumber.length !== 10){\n            alert(\"Phone Number should be 10 digits\")\n        }\n\n        if(!this.state.fname){\n            alert(\"First Name Cannot be blank\")\n        }\n\n        if(!this.state.lname){\n            alert(\"Last Name Cannot be blank\")\n        }\n\n\n\n        if(!this.state.age){\n            alert(\"Age Cannot be blank\")\n        }\n\n        if(!this.state.kids){\n            alert(\"Kids Cannot be blank\")\n        }\n    }\n\n    handleChange = (event, fieldName) => {\n        console.log(fieldName)\n        this.setState({[fieldName]: event.target.value})\n    }\n    handleSubmit = () => {\n        const isValid = this.validate()\n        if(isValid) {\n            var data = JSON.stringify({\n                              \"first_name\": this.state.fname,\n                              \"last_name\": this.state.lname,\n                              \"mobile_number\": this.state.phnumber,\n                              \"city_id\": this.state.cityId,\n                              \"age\": this.state.age,\n                              \"kids\": this.state.kids\n                            });\n            var xhr = new XMLHttpRequest();\n            xhr.withCredentials = true;\n            xhr.addEventListener(\"readystatechange\", function () {\n              if (this.readyState === 4) {\n                alert(this.responseText);\n              }\n            });\n            xhr.open(\"POST\", \"http://45eadb93.ngrok.io/v0/register\");\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n            xhr.setRequestHeader(\"Host\", \"45eadb93.ngrok.io\");\n            xhr.send(data);\n\n            alert(\"Registration Successful\")\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"eventForm\">\n                <div className=\"Desktop\">Hello Desktop\n                </div>\n                <div className=\"Mobile\">\n                    <form onSubmit={this.handleSubmit}>\n                        <table>\n                            <tr>\n                                <td>\n                                    <input type=\"text\" name={\"first_name\"} value={this.state.fname} onChange={(event) => this.handleChange(event, \"fname\")} placeholder={\"First Name\"}/>\n                                </td>\n                                <td>\n                                    <input type=\"text\" name={\"last_name\"} value={this.state.lname} onChange={(event) => this.handleChange(event, \"lname\")} placeholder={\"Last Name\"}/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <input type=\"number\" name={\"mobile_number\"} value={this.state.phnumber} onChange={(event) => this.handleChange(event, \"phnumber\")} placeholder={\"Phone Number\"}/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <input value={this.state.cityId} type=\"text\" name={\"city_id\"} list=\"cityList\" placeholder={\"City\"}/>\n                                    <datalist id=\"cityList\">\n                                        {this.state.cities.map(city => (\n                                            <option>{city.english}  {city.hindi}</option>\n                                        ))}\n                                    </datalist>\n                                </td>\n                                <td>\n                                    <input type=\"number\" name={\"age\"} value={this.state.age} onChange={(event) => this.handleChange(event, \"age\")} placeholder={\"Age\"}/>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <input type=\"number\" name={\"kids\"} value={this.state.kids} onChange={(event) => this.handleChange(event, \"kids\")} placeholder={\"Kids\"}/>\n                                </td>\n                            </tr>\n                        </table>\n                        <button className=\"submit-button\" type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Eventregister;\n"]},"metadata":{},"sourceType":"module"}